apiVersion: cluster.x-k8s.io/v1alpha3
kind: Cluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: ibm-powervs-1
  name: ibm-powervs-1
  namespace: namespace-1
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/16
    serviceDomain: cluster.local
    services:
      cidrBlocks:
      - 10.128.0.0/12
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
    kind: KubeadmControlPlane
    name: ibm-powervs-1-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: IBMPowerVSCluster
    name: ibm-powervs-1
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: IBMPowerVSCluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: ibm-powervs-1
  name: ibm-powervs-1
  namespace: namespace-1
spec:
  cloudInstanceID: e449d86e-c3a0-4c07-959e-8557fdf55482
  network: daf2b616-542b-47ed-8cec-ceaec1e90f4d
  vpcID: r018-d4a39527-a80d-4de2-ab14-fc6f59232751
  vpcRegion: eu-gb
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
kind: KubeadmControlPlane
metadata:
  name: ibm-powervs-1-control-plane
  namespace: namespace-1
spec:
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: IBMPowerVSMachineTemplate
    name: ibm-powervs-1-control-plane
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        certSANs:
        - localhost
        - 127.0.0.1
      controllerManager:
        extraArgs:
          enable-hostpath-provisioner: "true"
      dns: {}
      etcd: {}
      networking: {}
      scheduler: {}
    initConfiguration:
      localAPIEndpoint:
        advertiseAddress: ""
        bindPort: 0
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        kubeletExtraArgs:
          cloud-provider: external
          eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
          provider-id: ibmpowervs://ibm-powervs-1/'{{ v1.local_hostname }}'
    joinConfiguration:
      discovery:
        bootstrapToken:
          caCertHashes: []
          token: ""
          unsafeSkipCAVerification: false
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        kubeletExtraArgs:
          cloud-provider: external
          eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
          provider-id: ibmpowervs://ibm-powervs-1/'{{ v1.local_hostname }}'
    preKubeadmCommands:
    - hostname "{{ v1.local_hostname }}"
    - echo "{{ v1.local_hostname }}" >/etc/hostname
    - |
      cat <<EOF > /etc/cloud/cloud.cfg.d/01_disable_cloud_nw.cfg
      #cloud-config
      network:
        config: disabled
      EOF
    useExperimentalRetryJoin: true
  replicas: 1
  version: v1.21.2
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: IBMPowerVSMachineTemplate
metadata:
  name: ibm-powervs-1-control-plane
  namespace: namespace-1
spec:
  template:
    spec:
      cloudInstanceID: e449d86e-c3a0-4c07-959e-8557fdf55482
      cores: "0.25"
      image: fb2f75d1-1157-40b9-af2f-5459685ca089
      machineType: s922
      memory: "8"
      name: ibm-powervs-1-control-plane
      network: daf2b616-542b-47ed-8cec-ceaec1e90f4d
      processor: shared
      sshKey: mkumatag-pub-key
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  name: ibm-powervs-1-md-0
  namespace: namespace-1
spec:
  clusterName: ibm-powervs-1
  replicas: 0
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
          name: ibm-powervs-1-md-0
      clusterName: ibm-powervs-1
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
        kind: IBMPowerVSMachineTemplate
        name: ibm-powervs-1-md-0
      version: v1.21.2
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: IBMPowerVSMachineTemplate
metadata:
  name: ibm-powervs-1-md-0
  namespace: namespace-1
spec:
  template:
    spec:
      cloudInstanceID: e449d86e-c3a0-4c07-959e-8557fdf55482
      cores: "0.25"
      image: fb2f75d1-1157-40b9-af2f-5459685ca089
      machineType: s922
      memory: "8"
      name: ibm-powervs-1-md-0
      network: daf2b616-542b-47ed-8cec-ceaec1e90f4d
      processor: shared
      sshKey: mkumatag-pub-key
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: ibm-powervs-1
    cluster.x-k8s.io/control-plane: ""
  name: ibm-powervs-1-md-0
  namespace: namespace-1
spec:
  template:
    spec:
      clusterConfiguration:
        apiServer:
          certSANs:
          - localhost
          - 127.0.0.1
          - ""
          - ""
        clusterName: ibm-powervs-1
        controlPlaneEndpoint: :6443
        controllerManager:
          extraArgs:
            enable-hostpath-provisioner: "true"
        dns: {}
        etcd: {}
        kubernetesVersion: v1.19.8
        networking:
          dnsDomain: cluster.local
          podSubnet: 192.168.0.0/16
          serviceSubnet: 10.128.0.0/12
        scheduler: {}
      initConfiguration:
        localAPIEndpoint:
          advertiseAddress: ""
          bindPort: 0
        nodeRegistration:
          criSocket: /var/run/containerd/containerd.sock
          kubeletExtraArgs:
            cloud-provider: external
            eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
            provider-id: ibmpowervs://ibm-powervs-1/'{{ v1.local_hostname }}'
      joinConfiguration:
        discovery:
          bootstrapToken:
            apiServerEndpoint: :6443
            caCertHashes: []
            token: ""
            unsafeSkipCAVerification: false
        nodeRegistration:
          criSocket: /var/run/containerd/containerd.sock
          kubeletExtraArgs:
            cloud-provider: external
            eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
            provider-id: ibmpowervs://ibm-powervs-1/'{{ v1.local_hostname }}'
      preKubeadmCommands:
      - hostname "{{ v1.local_hostname }}"
      - echo "{{ v1.local_hostname }}" >/etc/hostname
      - |
        cat <<EOF > /etc/cloud/cloud.cfg.d/01_disable_cloud_nw.cfg
        #cloud-config
        network:
          config: disabled
        EOF
